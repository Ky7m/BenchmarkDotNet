# https://aka.ms/yaml

trigger:
  batch: true
  branches:
    # blacklist
    exclude:
    - gh-pages

name: $(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)

jobs:
- job: Linux
  timeoutInMinutes: 120
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - bash: ./build.sh
    continueOnError: true
  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*.trx'
      testRunTitle: 'Linux'
  - script: 'echo 1>&2'
    failOnStderr: true
    displayName: 'If above is partially succeeded, then fail'
    condition: eq(variables['Agent.JobStatus'], 'SucceededWithIssues')

- job: macOS
  timeoutInMinutes: 120
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - bash: ./build.sh
    continueOnError: true
  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*.trx'
      testRunTitle: 'macOS'
  - script: 'echo 1>&2'
    failOnStderr: true
    displayName: 'If above is partially succeeded, then fail'
    condition: eq(variables['Agent.JobStatus'], 'SucceededWithIssues')


- job: Windows
  timeoutInMinutes: 300
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - powershell: .\build.ps1
    continueOnError: true
  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*.trx'
      testRunTitle: 'Windows'
  - script: 'echo 1>&2'
    failOnStderr: true
    displayName: 'If above is partially succeeded, then fail'
    condition: eq(variables['Agent.JobStatus'], 'SucceededWithIssues')
