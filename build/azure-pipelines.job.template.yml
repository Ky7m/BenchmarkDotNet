parameters:
  name: ''
  vmImage: ''
  scriptFileName: ''
  timeoutInMinutes: 120

jobs:
- job: ${{ parameters.name }}
  timeoutInMinutes: ${{ parameters.timeoutInMinutes }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  steps:
  # Linux or macOS
  - bash: ${{ parameters.scriptFileName }}
    continueOnError: true
    condition: in( $(agent.OS), 'Linux', 'Darwin' )
  # Windows
  - powershell: ${{ parameters.scriptFileName }}
    continueOnError: true
    condition: eq( $(agent.OS), 'Windows_NT' )
  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*.trx'
      testRunTitle: ${{ parameters.name }}
  - script: 'echo 1>&2'
    failOnStderr: true
    displayName: 'If above is partially succeeded, then fail'
    condition: eq(variables['Agent.JobStatus'], 'SucceededWithIssues')